// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id      Int      @id @default(autoincrement())
  userName     String
  password   String
}

model Category {
  id      Int      @id @default(autoincrement())
  name          String @unique
  description         String?
  slug String @unique
  coverImage String  
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  projects Project[]
}

model Project {
  id      Int      @id @default(autoincrement())
  name          String @unique
  description         String?
  slug String @unique
  coverImage String  
  category    Category?   @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  images Image[]
  carousels Carousel[]
}

model Image {
  id      Int      @id @default(autoincrement())
  name          String @unique
  description         String?
  slug String @unique
  coverImage String 
  project    Project?   @relation(fields: [projectId], references: [id])
  projectId  Int?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
}

model Carousel {
  id      Int      @id @default(autoincrement())  
  project    Project?   @relation(fields: [projectId], references: [id])
  projectId  Int?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
}